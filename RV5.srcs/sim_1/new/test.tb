`timescale 1ns / 1ps
module test_tb();

reg clk, rstn;
reg Clk_CPU;
reg[15:0] sw_i;
reg[31:0] nowPC, newPC;
reg[31:0] instr, IF_ID_instr, ID_EX_instr, EX_MEM_instr, MEM_WB_instr;
reg[31:0] ID_EX_imm;
reg[31:0] ID_EX_RD1, ID_EX_RD2;
reg[31:0] src1, src2;
reg[31:0] alu_result;
reg[31:0] mem_data;
reg[31:0] WD;

CPU t_CPU(.clk(clk), .rstn(rstn), .sw_i(sw_i));

initial begin
    clk = 0;
    rstn = 0;
    sw_i = 16'b0100_0000_0000_0000;
    #10 rstn = 1;
    #50 clk = 1;
end

always #50 clk = ~clk;

always@(posedge clk) begin
        Clk_CPU = t_CPU.Clk_CPU;
        nowPC = t_CPU.nowPC;
        newPC = t_CPU.newPC;
        instr = t_CPU.instr;
        IF_ID_instr = t_CPU.IF_ID_instr;
        ID_EX_instr = t_CPU.ID_EX_instr;
        EX_MEM_instr = t_CPU.EX_MEM_instr;
        MEM_WB_instr = t_CPU.MEM_WB_instr;
        ID_EX_imm = t_CPU.ID_EX_imm;
        ID_EX_RD1 = t_CPU.ID_EX_RD1;
        ID_EX_RD2 = t_CPU.ID_EX_RD2;
        src1 = t_CPU.src1;
        src2 = t_CPU.src2;
        alu_result = t_CPU.EX_MEM_alu_result;
        mem_data = t_CPU.MEM_WB_mem_data;
        WD = t_CPU.WD;
end

endmodule